local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==5) then v41=nil;function v41(v43,v44,v45)local v46=0;local v47;local v48;local v49;while true do if (v46==0) then v47=v43[1];v48=v43[2];v46=1;end if (v46==1) then v49=v43[3];return function(...)local v89=v47;local v90=v48;local v91=v49;local v92=v39;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v115=0,v97 do if (v115>=v91) then v95[v115-v91 ]=v96[v115 + 1 ];else v99[v115]=v96[v115 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v116=0;while true do if (0==v116) then v101=v89[v93];v102=v101[1];v116=1;end if (v116==1) then if (v102<=50) then if (v102<=24) then if (v102<=11) then if (v102<=5) then if (v102<=2) then if (v102<=(0 + 0)) then if (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[11 -8 ];end elseif (v102>(953 -(802 + 150))) then local v183=v101[2];v99[v183]=v99[v183](v99[v183 + 1 ]);else local v185=v90[v101[3]];local v186;local v187={};v186=v18({},{[v7("\249\221\43\233\88\242\222","\151\166\130\66\135\60")]=function(v344,v345)local v346=0;local v347;while true do if (v346==0) then v347=v187[v345];return v347[2 -1 ][v347[2]];end end end,[v7("\6\15\74\116\46\57\74\117\60\40","\17\89\80\36")]=function(v348,v349,v350)local v351=0;local v352;while true do if (v351==0) then v352=v187[v349];v352[1][v352[2]]=v350;break;end end end});for v353=1,v101[4] do local v354=0;local v355;while true do if (v354==0) then v93=v93 + 1 ;v355=v89[v93];v354=1;end if (v354==1) then if (v355[1]==(172 -77)) then v187[v353-1 ]={v99,v355[3 + 0 ]};else v187[v353-1 ]={v44,v355[3]};end v98[ #v98 + 1 ]=v187;break;end end end v99[v101[2]]=v41(v185,v186,v45);end elseif (v102<=3) then v99[v101[2]]=v45[v101[3]];elseif (v102>4) then local v189=v101[2];local v190,v191=v92(v99[v189]());v94=(v191 + v189) -1 ;local v192=0 -0 ;for v356=v189,v94 do local v357=0;while true do if (v357==0) then v192=v192 + 1 ;v99[v356]=v190[v192];break;end end end else do return;end end elseif (v102<=8) then if (v102<=6) then v99[v101[2 + 0 ]]=v99[v101[3 -0 ]]%v99[v101[4]] ;elseif (v102==7) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else local v193=0;local v194;local v195;while true do if (v193==0) then v194=v101[2];v195=v99[v101[1190 -(1069 + 118) ]];v193=1;end if (v193==1) then v99[v194 + 1 ]=v195;v99[v194]=v195[v101[8 -4 ]];break;end end end elseif (v102<=(19 -10)) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==10) then local v197=0;local v198;local v199;while true do if (v197==0) then v198=v101[2];v199={};v197=1;end if (v197==1) then for v455=1, #v98 do local v456=v98[v455];for v494=0, #v456 do local v495=v456[v494];local v496=v495[1];local v497=v495[2];if ((v496==v99) and (v497>=v198)) then v199[v497]=v496[v497];v495[1]=v199;end end end break;end end else local v200=0;local v201;while true do if (v200==0) then v201=v101[2];v99[v201](v99[v201 + 1 + 0 ]);break;end end end elseif (v102<=17) then if (v102<=14) then if (v102<=12) then local v144=v101[2];local v145,v146=v92(v99[v144](v99[v144 + 1 ]));v94=(v146 + v144) -(1 -0) ;local v147=0;for v175=v144,v94 do v147=v147 + 1 ;v99[v175]=v145[v147];end elseif (v102>(13 + 0)) then v99[v101[2]]=v44[v101[3]];else local v204=v101[2];local v205,v206=v92(v99[v204](v21(v99,v204 + 1 ,v94)));v94=(v206 + v204) -1 ;local v207=0;for v358=v204,v94 do local v359=0;while true do if (v359==0) then v207=v207 + 1 ;v99[v358]=v205[v207];break;end end end end elseif (v102<=(806 -(368 + 423))) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==16) then local v209=v101[6 -4 ];local v210=v99[v209];local v211=v101[3];for v360=1,v211 do v210[v360]=v99[v209 + v360 ];end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=20) then if (v102<=18) then if (v99[v101[20 -(10 + 8) ]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==19) then local v213=0;local v214;while true do if (v213==0) then v214=v101[2];v99[v214]=v99[v214](v99[v214 + 1 ]);break;end end else local v215=0;local v216;while true do if (v215==0) then v216=v101[2];v99[v216]=v99[v216](v21(v99,v216 + 1 ,v101[3]));break;end end end elseif (v102<=22) then if (v102>21) then do return v99[v101[2]]();end else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102==23) then v99[v101[2]][v99[v101[3]]]=v101[4];else local v221=v101[2];local v222=v99[v221 + 2 ];local v223=v99[v221] + v222 ;v99[v221]=v223;if (v222>0) then if (v223<=v99[v221 + 1 ]) then local v459=0;while true do if (0==v459) then v93=v101[3];v99[v221 + 3 ]=v223;break;end end end elseif (v223>=v99[v221 + 1 ]) then local v460=0;while true do if (v460==0) then v93=v101[3];v99[v221 + 3 ]=v223;break;end end end end elseif (v102<=37) then if (v102<=30) then if (v102<=(103 -76)) then if (v102<=25) then local v148=v101[2];v99[v148]=v99[v148]();elseif (v102>26) then v99[v101[2]]={};else v99[v101[2]]=v41(v90[v101[445 -(416 + 26) ]],nil,v45);end elseif (v102<=28) then v99[v101[2]]();elseif (v102==29) then v99[v101[2]]=v44[v101[3]];else local v229=0;local v230;local v231;local v232;local v233;while true do if (v229==1) then v94=(v232 + v230) -1 ;v233=0;v229=2;end if (0==v229) then v230=v101[2];v231,v232=v92(v99[v230]());v229=1;end if (v229==2) then for v461=v230,v94 do v233=v233 + 1 ;v99[v461]=v231[v233];end break;end end end elseif (v102<=33) then if (v102<=31) then local v150=v101[6 -4 ];do return v99[v150](v21(v99,v150 + 1 ,v94));end elseif (v102>(14 + 18)) then local v234=0;local v235;while true do if (v234==0) then v235=v101[2];v99[v235]=v99[v235](v21(v99,v235 + 1 ,v101[3]));break;end end elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=35) then if (v102==34) then do return;end else local v236=v101[2];v99[v236](v21(v99,v236 + 1 ,v94));end elseif (v102==36) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else local v238=0;local v239;while true do if (0==v238) then v239=v101[2];v99[v239]=v99[v239](v21(v99,v239 + 1 ,v94));break;end end end elseif (v102<=43) then if (v102<=40) then if (v102<=38) then v99[v101[2]]={};elseif (v102>39) then v99[v101[2]]=v101[3];else local v242=0;local v243;local v244;local v245;while true do if (v242==0) then v243=v90[v101[3]];v244=nil;v242=1;end if (v242==2) then for v464=1,v101[6 -2 ] do local v465=0;local v466;while true do if (1==v465) then if (v466[1]==(525 -(44 + 386))) then v245[v464-1 ]={v99,v466[3]};else v245[v464-1 ]={v44,v466[3]};end v98[ #v98 + 1 ]=v245;break;end if (v465==0) then v93=v93 + (439 -(145 + 293)) ;v466=v89[v93];v465=1;end end end v99[v101[2]]=v41(v243,v244,v45);break;end if (1==v242) then v245={};v244=v18({},{[v7("\74\69\115\192\113\127\98","\174\21\26\26")]=function(v467,v468)local v469=0;local v470;while true do if (v469==0) then v470=v245[v468];return v470[1][v470[2]];end end end,[v7("\8\158\186\21\32\168\186\20\50\185","\112\87\193\212")]=function(v471,v472,v473)local v474=0;local v475;while true do if (v474==0) then v475=v245[v472];v475[1][v475[2]]=v473;break;end end end});v242=2;end end end elseif (v102<=41) then local v152=0;local v153;while true do if (v152==0) then v153=v101[2];do return v99[v153](v21(v99,v153 + 1 ,v101[1489 -(998 + 488) ]));end break;end end elseif (v102>42) then v99[v101[2]]=v41(v90[v101[3]],nil,v45);else local v247=0;local v248;while true do if (v247==0) then v248=v101[2];v99[v248](v21(v99,v248 + 1 ,v101[3]));break;end end end elseif (v102<=46) then if (v102<=44) then v93=v101[3];elseif (v102>45) then local v249=0;local v250;local v251;while true do if (v249==0) then v250=v101[2];v251=v99[v250];v249=1;end if (v249==1) then for v476=v250 + 1 ,v94 do v15(v251,v99[v476]);end break;end end else v99[v101[2]]=v45[v101[3]];end elseif (v102<=48) then if (v102>47) then local v254=v101[2];local v255={};for v364=1, #v98 do local v365=v98[v364];for v395=0 + 0 , #v365 do local v396=0;local v397;local v398;local v399;while true do if (v396==1) then v399=v397[774 -(201 + 571) ];if ((v398==v99) and (v399>=v254)) then v255[v399]=v398[v399];v397[1]=v255;end break;end if (v396==0) then v397=v365[v395];v398=v397[1 + 0 ];v396=1;end end end end else local v256=0;local v257;local v258;local v259;local v260;while true do if (v256==1) then v94=(v259 + v257) -1 ;v260=0;v256=2;end if (v256==2) then for v477=v257,v94 do local v478=0;while true do if (v478==0) then v260=v260 + 1 ;v99[v477]=v258[v260];break;end end end break;end if (v256==0) then v257=v101[2];v258,v259=v92(v99[v257](v21(v99,v257 + (1139 -(116 + 1022)) ,v101[3])));v256=1;end end end elseif (v102==49) then local v261=0;local v262;while true do if (v261==0) then v262=v101[2];do return v21(v99,v262,v94);end break;end end else v93=v101[12 -9 ];end elseif (v102<=76) then if (v102<=63) then if (v102<=56) then if (v102<=53) then if (v102<=51) then v99[v101[2]][v101[3]]=v99[v101[4]];elseif (v102==52) then do return v99[v101[2]]();end else local v264=0;local v265;local v266;while true do if (v264==0) then v265=v101[2];v266=v99[v101[3]];v264=1;end if (v264==1) then v99[v265 + 1 + 0 ]=v266;v99[v265]=v266[v101[14 -10 ]];break;end end end elseif (v102<=54) then for v178=v101[2],v101[3] do v99[v178]=nil;end elseif (v102==55) then local v267=v101[2];local v268=v101[4];local v269=v267 + 2 ;local v270={v99[v267](v99[v267 + (3 -2) ],v99[v269])};for v366=1,v268 do v99[v269 + v366 ]=v270[v366];end local v271=v270[1];if v271 then local v400=0;while true do if (v400==0) then v99[v269]=v271;v93=v101[862 -(814 + 45) ];break;end end else v93=v93 + 1 ;end else v99[v101[4 -2 ]]=v99[v101[1 + 2 ]][v101[4]];end elseif (v102<=59) then if (v102<=57) then if (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>58) then local v275=v101[2];v99[v275](v21(v99,v275 + 1 ,v101[3]));else v99[v101[2]]=v99[v101[3]] + v101[2 + 2 ] ;end elseif (v102<=61) then if (v102==60) then local v277=v101[2];local v278=v99[v277];for v369=v277 + (886 -(261 + 624)) ,v101[3] do v15(v278,v99[v369]);end else v99[v101[2]]=v101[3];end elseif (v102>62) then local v281=0;local v282;while true do if (v281==1) then for v479=v282,v94 do local v480=v95[v479-v282 ];v99[v479]=v480;end break;end if (v281==0) then v282=v101[2];v94=(v282 + v100) -1 ;v281=1;end end else local v283=v101[2];local v284={v99[v283]()};local v285=v101[4];local v286=0;for v370=v283,v285 do v286=v286 + 1 ;v99[v370]=v284[v286];end end elseif (v102<=69) then if (v102<=(1146 -(1020 + 60))) then if (v102<=64) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[1426 -(630 + 793) ];end elseif (v102>(220 -155)) then local v288=v101[2];do return v21(v99,v288,v94);end elseif (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(317 -250)) then local v157=0;local v158;local v159;local v160;while true do if (v157==0) then v158=v101[2];v159=v99[v158];v157=1;end if (v157==1) then v160=v99[v158 + 2 ];if (v160>0) then if (v159>v99[v158 + 1 ]) then v93=v101[3];else v99[v158 + 3 ]=v159;end elseif (v159<v99[v158 + 1 ]) then v93=v101[3];else v99[v158 + 3 ]=v159;end break;end end elseif (v102==68) then v99[v101[1 + 1 ]][v101[3]]=v99[v101[13 -9 ]];else for v376=v101[2],v101[3] do v99[v376]=nil;end end elseif (v102<=72) then if (v102<=70) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif (v102==(1818 -(760 + 987))) then local v291=v101[2];local v292={v99[v291]()};local v293=v101[4];local v294=0;for v378=v291,v293 do local v379=0;while true do if (v379==0) then v294=v294 + 1 ;v99[v378]=v292[v294];break;end end end else local v295=0;local v296;while true do if (v295==0) then v296=v101[1915 -(1789 + 124) ];do return v99[v296](v21(v99,v296 + 1 ,v101[3]));end break;end end end elseif (v102<=74) then if (v102>73) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v101[3]~=0 ;end elseif (v102==75) then local v298=v101[2];local v299=v99[v298];for v380=v298 + 1 ,v94 do v15(v299,v99[v380]);end else local v300=0;local v301;local v302;local v303;local v304;while true do if (v300==2) then for v484=v301,v94 do local v485=0;while true do if (0==v485) then v304=v304 + 1 ;v99[v484]=v302[v304];break;end end end break;end if (v300==1) then v94=(v303 + v301) -1 ;v304=0;v300=2;end if (v300==0) then v301=v101[2];v302,v303=v92(v99[v301](v21(v99,v301 + 1 ,v94)));v300=1;end end end elseif (v102<=89) then if (v102<=(848 -(745 + 21))) then if (v102<=79) then if (v102<=(27 + 50)) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif (v102>78) then local v305=0;local v306;local v307;local v308;while true do if (v305==0) then v306=v101[2];v307=v99[v306];v305=1;end if (v305==1) then v308=v99[v306 + 2 ];if (v308>0) then if (v307>v99[v306 + 1 ]) then v93=v101[3];else v99[v306 + (7 -4) ]=v307;end elseif (v307<v99[v306 + 1 ]) then v93=v101[11 -8 ];else v99[v306 + 3 ]=v307;end break;end end else local v309=v101[2];local v310,v311=v92(v99[v309](v21(v99,v309 + 1 ,v101[1 + 2 ])));v94=(v311 + v309) -1 ;local v312=0;for v381=v309,v94 do local v382=0;while true do if (v382==0) then v312=v312 + 1 + 0 ;v99[v381]=v310[v312];break;end end end end elseif (v102<=80) then v99[v101[2]]= #v99[v101[3]];elseif (v102>81) then v99[v101[1057 -(87 + 968) ]]= #v99[v101[3]];elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=85) then if (v102<=83) then v99[v101[2]][v99[v101[3]]]=v99[v101[4]];elseif (v102==84) then v99[v101[2]]=v101[3]~=0 ;else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=(382 -295)) then if (v102>86) then local v317=v101[2];v99[v317](v99[v317 + 1 ]);else v99[v101[2]]=v99[v101[3]];end elseif (v102>(80 + 8)) then local v320=0;local v321;local v322;local v323;while true do if (v320==0) then v321=v101[2];v322=v99[v321];v320=1;end if (v320==1) then v323=v101[6 -3 ];for v488=1414 -(447 + 966) ,v323 do v322[v488]=v99[v321 + v488 ];end break;end end else local v324=v101[2];v99[v324](v21(v99,v324 + 1 ,v94));end elseif (v102<=95) then if (v102<=92) then if (v102<=90) then local v166=0;local v167;while true do if (v166==0) then v167=v101[5 -3 ];v99[v167]=v99[v167]();break;end end elseif (v102>91) then v99[v101[2]]();else v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;end elseif (v102<=93) then local v168=v101[2];local v169,v170=v92(v99[v168](v99[v168 + 1 ]));v94=(v170 + v168) -1 ;local v171=0;for v180=v168,v94 do local v181=0;while true do if (0==v181) then v171=v171 + 1 ;v99[v180]=v169[v171];break;end end end elseif (v102>94) then v99[v101[2]]=v99[v101[3]];else local v328=v101[2];do return v99[v328](v21(v99,v328 + 1 ,v94));end end elseif (v102<=98) then if (v102<=(1913 -(1703 + 114))) then local v172=0;local v173;while true do if (v172==0) then v173=v101[2];v99[v173]=v99[v173](v21(v99,v173 + 1 ,v94));break;end end elseif (v102>97) then local v329=v101[2];local v330=v101[4];local v331=v329 + 2 ;local v332={v99[v329](v99[v329 + 1 ],v99[v331])};for v387=1,v330 do v99[v331 + v387 ]=v332[v387];end local v333=v332[1];if v333 then local v406=0;while true do if (v406==0) then v99[v331]=v333;v93=v101[3];break;end end else v93=v93 + 1 ;end else local v334=0;local v335;local v336;local v337;while true do if (v334==0) then v335=v101[2];v336=v99[v335 + 2 ];v334=1;end if (v334==2) then if (v336>0) then if (v337<=v99[v335 + 1 ]) then v93=v101[3];v99[v335 + 3 ]=v337;end elseif (v337>=v99[v335 + 1 ]) then local v536=0;while true do if (v536==0) then v93=v101[704 -(376 + 325) ];v99[v335 + 3 ]=v337;break;end end end break;end if (v334==1) then v337=v99[v335] + v336 ;v99[v335]=v337;v334=2;end end end elseif (v102<=100) then if (v102==99) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else v99[v101[2 -0 ]]=v99[v101[3]][v101[12 -8 ]];end elseif (v102==101) then v99[v101[2]]=v99[v101[3]] + v101[4] ;else local v342=0;local v343;while true do if (v342==0) then v343=v101[2];v94=(v343 + v100) -1 ;v342=1;end if (v342==1) then for v491=v343,v94 do local v492=v95[v491-v343 ];v99[v491]=v492;end break;end end end v93=v93 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (1==v29) then function v32(v50,v51,v52)if v52 then local v80=0;local v81;while true do if (v80==0) then v81=(v50/(2^(v51-1)))%(2^(((v52-(2 -1)) -(v51-1)) + (620 -(555 + 64)))) ;return v81-(v81%1) ;end end else local v82=0;local v83;while true do if (v82==0) then v83=2^(v51-(932 -(857 + 74))) ;return (((v50%(v83 + v83))>=v83) and 1) or 0 ;end end end end v33=nil;function v33()local v53=v9(v27,v30,v30);v30=v30 + 1 ;return v53;end v34=nil;v29=2;end if (v29==3) then function v36()local v54=v35();local v55=v35();local v56=928 -(214 + 713) ;local v57=(v32(v55,1,20) * (2^(9 + 23))) + v54 ;local v58=v32(v55,21,31);local v59=((v32(v55,6 + 26 )==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=878 -(282 + 595) ;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * ((1638 -(1523 + 114))/(0 + 0)))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end v37=nil;function v37(v60)local v61=0;local v62;local v63;while true do if (2==v61) then v63={};for v103=1066 -(68 + 997) , #v62 do v63[v103]=v10(v9(v11(v62,v103,v103)));end v61=3;end if (v61==1) then v62=v11(v27,v30,(v30 + v60) -(1 -0) );v30=v30 + v60 ;v61=2;end if (v61==3) then return v14(v63);end if (v61==0) then v62=nil;if  not v60 then local v117=0;while true do if (0==v117) then v60=v35();if (v60==0) then return "";end break;end end end v61=1;end end end v38=v35;v29=4;end if (0==v29) then v30=2 -1 ;v31=nil;v27=v12(v11(v27,14 -9 ),v7("\229\58","\67\203\20\223\223\37\33\178"),function(v64)if (v9(v64,2)==79) then v31=v8(v11(v64,1,1 -0 ));return "";else local v84=v10(v8(v64,16));if v31 then local v105=v13(v84,v31);v31=nil;return v105;else return v84;end end end);v32=nil;v29=1;end if (v29==2) then function v34()local v65=0;local v66;local v67;while true do if (v65==0) then v66,v67=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v65=1;end if (v65==1) then return (v67 * (824 -(367 + 201))) + v66 ;end end end v35=nil;function v35()local v68=0;local v69;local v70;local v71;local v72;while true do if (0==v68) then v69,v70,v71,v72=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v68=1;end if (1==v68) then return (v72 * 16777216) + (v71 * 65536) + (v70 * 256) + v69 ;end end end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v73=0;local v74;local v75;local v76;local v77;local v78;local v79;while true do if (1==v73) then v77={v74,v75,nil,v76};v78=v35();v79={};v73=2;end if (v73==0) then v74={};v75={};v76={};v73=1;end if (v73==2) then for v106=1,v78 do local v107=0;local v108;local v109;while true do if (v107==0) then v108=v33();v109=nil;v107=1;end if (v107==1) then if (v108==1) then v109=v33()~=0 ;elseif (v108==(119 -(32 + 85))) then v109=v36();elseif (v108==3) then v109=v37();end v79[v106]=v109;break;end end end v77[3]=v33();for v110=1,v35() do local v111=0;local v112;while true do if (0==v111) then v112=v33();if (v32(v112,1,1)==0) then local v125=0;local v126;local v127;local v128;while true do if (0==v125) then v126=v32(v112,2,3 + 0 );v127=v32(v112,4,6);v125=1;end if (1==v125) then v128={v34(),v34(),nil,nil};if (v126==0) then local v130=0;while true do if (v130==0) then v128[3]=v34();v128[4]=v34();break;end end elseif (v126==1) then v128[3]=v35();elseif (v126==2) then v128[960 -(892 + 65) ]=v35() -(2^16) ;elseif (v126==3) then local v174=0;while true do if (v174==0) then v128[7 -4 ]=v35() -(2^16) ;v128[4]=v34();break;end end end v125=2;end if (v125==2) then if (v32(v127,1,1 -0 )==1) then v128[3 -1 ]=v79[v128[352 -(87 + 263) ]];end if (v32(v127,2,2)==(181 -(67 + 113))) then v128[3]=v79[v128[3 + 0 ]];end v125=3;end if (v125==3) then if (v32(v127,3,3)==1) then v128[4]=v79[v128[9 -5 ]];end v74[v110]=v128;break;end end end break;end end end v73=3;end if (v73==3) then for v113=1,v35() do v75[v113-1 ]=v40();end return v77;end end end v29=5;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--
